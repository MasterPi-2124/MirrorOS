name: Build

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Create config file
        run: |
          touch config.txt
          echo COMPRESSION_LEVEL=${{ secrets.COMPRESSION_LEVEL }} >> config.txt
          echo DEPLOY_COMPRESSION=${{ secrets.DEPLOY_COMPRESSION }} >> config.txt
          echo DISABLE_FIRST_BOOT_USER_RENAME=${{ secrets.DISABLE_FIRST_BOOT_USER_RENAME }} >> config.txt
          echo FIRST_USER_NAME=${{ secrets.FIRST_USER_NAME }} >> config.txt
          echo FIRST_USER_PASS=${{ secrets.FIRST_USER_PASS }} >> config.txt
          echo GIT_EMAIL='${{ secrets.GIT_EMAIL }}' >> config.txt
          echo GIT_USERNAME='${{ secrets.GIT_USERNAME }}' >> config.txt
          echo IMG_NAME=${{ secrets.IMG_NAME }} >> config.txt
          echo KEYBOARD_KEYMAP=${{ secrets.KEYBOARD_KEYMAP }} >> config.txt
          echo KEYBOARD_LAYOUT='${{ secrets.KEYBOARD_LAYOUT }}' >> config.txt
          echo LOCALE_DEFAULT=${{ secrets.LOCALE_DEFAULT }} >> config.txt
          echo STAGE_LIST='${{ secrets.STAGE_LIST }}' >> config.txt
          echo TARGET_HOSTNAME=${{ secrets.TARGET_HOSTNAME }} >> config.txt
          echo TIMEZONE_DEFAULT='${{ secrets.TIMEZONE_DEFAULT }}' >> config.txt
          echo WPA_COUNTRY=${{ secrets.WPA_COUNTRY }} >> config.txt
          cat config.txt

      - name: send config file
        uses: garygrossgarten/github-action-scp@release
        with:
          local: config.txt
          remote: /root/config.txt
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.USERNAME }}
          privateKey: ${{ secrets.PRIV_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Prepare
        run: |
          sudo apt update
          sudo apt install --fix-missing
          sudo apt install -y coreutils quilt parted debootstrap zerofree zip dosfstools libarchive-tools libcap2-bin grep rsync xz-utils file git curl bc kpartx gpg pigz qemu-user-static qemu-utils

      - name: Build
        run: sudo bash build.sh -c config
      
      - name: Upload image
        uses: actions/upload-artifact@v3
        with:
          name: MirrorOS
          path: deploy/*.img.gz
          if-no-files-found: error
